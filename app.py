# app.py

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import calplot

# Configuraci√≥n
st.set_page_config(page_title="Riesgo Clim√°tico en Valencia", layout="wide")

# T√≠tulo
st.title("üå§Ô∏è Riesgo Clim√°tico Diario en Valencia")
st.markdown("""
Esta aplicaci√≥n muestra la evoluci√≥n de los riesgos clim√°ticos en Valencia basados en tres factores: **√≠ndice UV elevado**, **calor extremo** y **humedad alta**.
""")

# Cargar datos
df = pd.read_csv("datos_valencia_limpios.csv", parse_dates=["datetime"])

# A√±adir columnas de mes y a√±o
df["mes"] = df["datetime"].dt.month
df["a√±o"] = df["datetime"].dt.year

# Sidebar de filtros
st.sidebar.header("üìÖ Filtros")
a√±o_sel = st.sidebar.selectbox("Selecciona un a√±o", sorted(df["a√±o"].unique()), index=0)
mes_sel = st.sidebar.selectbox("Selecciona un mes", sorted(df["mes"].unique()), index=0)

df_filtrado = df[(df["a√±o"] == a√±o_sel) & (df["mes"] == mes_sel)]

# üîé Explicaci√≥n de riesgos
with st.expander("‚ÑπÔ∏è ¬øQu√© significa cada tipo de riesgo?"):
    st.markdown("""
    - **Riesgo UV alto**: √≠ndice UV ‚â• 8. Puede provocar quemaduras en menos de 30 minutos sin protecci√≥n.
    - **Riesgo por calor extremo**: temperatura m√°xima ‚â• 35¬∞C. Aumenta el riesgo de golpe de calor.
    - **Riesgo por humedad alta**: humedad relativa ‚â• 85%. Dificulta la evaporaci√≥n del sudor y aumenta la sensaci√≥n t√©rmica.
    """)

# Gr√°fico: evoluci√≥n del √≠ndice UV
st.subheader("üìà Evoluci√≥n diaria del √≠ndice UV")
fig1, ax1 = plt.subplots(figsize=(10, 4))
ax1.plot(df_filtrado["datetime"], df_filtrado["uvindex"], marker='o', color='orange')
ax1.set_xlabel("Fecha")
ax1.set_ylabel("√çndice UV")
ax1.set_title("√çndice UV diario")
ax1.grid(True)
st.pyplot(fig1)

# Gr√°fico: d√≠as con cada tipo de riesgo
st.subheader("üî• Cantidad de d√≠as con riesgo clim√°tico")
riesgos = df_filtrado[["riesgo_uv", "riesgo_calor", "riesgo_humedad"]].sum()
riesgos.index = ["UV alto", "Calor extremo", "Humedad alta"]
fig2, ax2 = plt.subplots()
sns.barplot(x=riesgos.index, y=riesgos.values, ax=ax2, palette="Reds")
ax2.set_ylabel("N√∫mero de d√≠as")
ax2.set_title("Tipos de riesgo clim√°tico")
st.pyplot(fig2)

# Gr√°fico: condiciones meteorol√≥gicas m√°s frecuentes
st.subheader("üå¶Ô∏è Condiciones meteorol√≥gicas m√°s frecuentes")
condiciones = df_filtrado["condicion_simplificada"].value_counts()
fig3, ax3 = plt.subplots()
sns.barplot(x=condiciones.index, y=condiciones.values, ax=ax3, palette="Blues")
ax3.set_ylabel("N√∫mero de d√≠as")
ax3.set_title("Condiciones m√°s comunes")
st.pyplot(fig3)

# Tabla: d√≠as con mayor riesgo total
st.subheader("üìã Top 10 d√≠as con mayor riesgo")
tabla = df_filtrado.sort_values(by="riesgo_total", ascending=False).head(10)
st.dataframe(tabla[["datetime", "uvindex", "tempmax", "humidity", "riesgo_total", "condicion_simplificada"]])



